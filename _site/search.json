[
  {
    "objectID": "Graph-Gallery.zh-cn.html",
    "href": "Graph-Gallery.zh-cn.html",
    "title": "ÂèØËßÜÂåñÊÄªËßà",
    "section": "",
    "text": "üëã Bizard is a comprehensive repository of advanced visualization codes tailored for biomedical research.\nThe toolkit includes a diverse array of charting options, from variable distributions to interactive visualizations, systematically organized to meet the unique needs of biomedical data analysis. Built on a robust foundation, each example is paired with reproducible R code, detailed annotations, and real-world datasets to ensure accessibility and practical application.\nWith resources for both beginners and seasoned researchers, Bizard empowers users to create intuitive, scientifically rigorous, and visually compelling outputs, advancing data visualization standards in the biomedical field."
  },
  {
    "objectID": "Distribution-Gallery_sec/histogram.html",
    "href": "Distribution-Gallery_sec/histogram.html",
    "title": "Histogram",
    "section": "",
    "text": "A histogram uses rectangular bars to represent the frequency of data within specific intervals, where the total area of the bars corresponds to the total frequency. It is primarily used to visualize the distribution of continuous variables."
  },
  {
    "objectID": "Distribution-Gallery_sec/histogram.html#example",
    "href": "Distribution-Gallery_sec/histogram.html#example",
    "title": "Histogram",
    "section": "Example",
    "text": "Example\n\n\n\n\n\nThis basic histogram illustrates the expression levels of the TSPAN6 gene across different samples. The x-axis represents the data values, with each bar covering a specific range of values, while the y-axis shows how many data points fall within that range. In this histogram, the bars indicate the count of values within each specified range.\nThe histogram reveals that the data is centered around a value of 12, with values spanning roughly from 8 to 16. The shape of the histogram is approximately bell-shaped, suggesting that the data may follow a normal distribution."
  },
  {
    "objectID": "Distribution-Gallery_sec/histogram.html#setup",
    "href": "Distribution-Gallery_sec/histogram.html#setup",
    "title": "Histogram",
    "section": "Setup",
    "text": "Setup\n\nSystem Requirements: Cross-platform (Linux/MacOS/Windows)\nProgramming Language: R\nDependencies: ggplot2, ggExtra\n\n# Installing necessary packages\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")  # Install ggplot2 for data visualization\n}\nif (!requireNamespace(\"ggExtra\", quietly = TRUE)) {\n  install.packages(\"ggExtra\")  # Install ggExtra for enhancing ggplot2 graphics\n}\nif (!requireNamespace(\"tidyverse\", quietly = TRUE)) {\n  install.packages(\"tidyverse\")  # Install tidyverse for data manipulation\n}\n\n# Loading the libraries\nlibrary(ggplot2)    # Load ggplot2 for creating plots\nlibrary(ggExtra)    # Load ggExtra for additional plot functionalities\nlibrary(tidyverse)  # Load tidyverse for data manipulation functions"
  },
  {
    "objectID": "Distribution-Gallery_sec/histogram.html#data-preparation",
    "href": "Distribution-Gallery_sec/histogram.html#data-preparation",
    "title": "Histogram",
    "section": "Data Preparation",
    "text": "Data Preparation\nHere‚Äôs a brief tutorial using the built-in R datasets (iris, mtcars) and the TCGALIHC.htseq_counts.tsv dataset from UCSC Xena. This example demonstrates how to load and work with these datasets in R.\n# Read the TSV data\ndata &lt;- read.csv(\"TCGA-LIHC.htseq_counts.tsv\", header = TRUE, sep = \"\\t\")  # Correct separator for TSV\n\n# Filter and reshape data\ndata1 &lt;- data %&gt;%\n  filter(Ensembl_ID == \"ENSG00000000003.13\") %&gt;%\n  pivot_longer(\n    cols = -Ensembl_ID, \n    names_to = \"sample\", \n    values_to = \"expression\"\n  ) %&gt;%\n  mutate(var = \"var1\")  # Add a column to differentiate the variables\n\n# Filter and reshape data for the second gene (Ensembl ID: ENSG00000000457.12)\ndata2 &lt;- data %&gt;%\n  filter(Ensembl_ID == \"ENSG00000000457.12\") %&gt;%\n  pivot_longer(\n    cols = -Ensembl_ID, \n    names_to = \"sample\", \n    values_to = \"expression\"\n  ) %&gt;%\n  mutate(var = \"var2\")  # Add a column to differentiate the variables\n\n# Combine the two datasets\ndata12 &lt;- bind_rows(data1, data2)\n\n# View the final combined dataset\nhead(data12)"
  },
  {
    "objectID": "Distribution-Gallery_sec/histogram.html#visualization",
    "href": "Distribution-Gallery_sec/histogram.html#visualization",
    "title": "Histogram",
    "section": "Visualization",
    "text": "Visualization\n\nBasic Histogram\n# Basic Histogram\np1 &lt;- ggplot(data1, aes(x = expression)) +\ngeom_histogram()\n\np1\n\n\n\nThis basic histogram illustrates the distribution of expression levels for the TSPAN6 gene across different samples.\n\n\n\n\nKey Parameters: binwidth / bins\nThe binwidth or bins parameter determines how much data each bin will contain. Modifying these values can significantly affect the appearance of the histogram and the information conveyed.\np2 &lt;- ggplot(data1, aes(x = expression)) +\n  geom_histogram(bins = 50, fill = \"skyblue\", color = \"white\") +\n  ggtitle(\"Bins = 50\")\n\np2\n\n\n\n\n\n\n\nHistogram with Density Curve\nThe density curve provides a smooth representation of the data distribution. Unlike the histogram, which depends on the number of bins, the density curve uses kernel density estimation (KDE) to smooth the distribution. This allows a clearer understanding of the overall trend and shape of the data.\np1 &lt;- ggplot(data1, aes(x = expression)) +\n  geom_histogram(aes(y = after_stat(density)), bins = 30, fill = \"skyblue\", color = \"white\") +\n  geom_density(alpha = 0.2, fill = \"#FF6666\")\n\np1"
  },
  {
    "objectID": "Distribution-Gallery_sec/histogram.html#under-construction",
    "href": "Distribution-Gallery_sec/histogram.html#under-construction",
    "title": "Histogram",
    "section": "UNDER CONSTRUCTION",
    "text": "UNDER CONSTRUCTION"
  },
  {
    "objectID": "Distribution-Gallery_sec/histogram.html#reference",
    "href": "Distribution-Gallery_sec/histogram.html#reference",
    "title": "Histogram",
    "section": "Reference",
    "text": "Reference\n\nCosta, A. M., Machado, J. T., & Quelhas, M. D. (2011). Histogram-based DNA analysis for the visualization of chromosome, genome, and species information. Bioinformatics, 27(9), 1207‚Äì1214. https://doi.org/10.1093/bioinformatics/btr131\nXiang, L., Yang, H., Qin, Y., Wen, Y., Liu, X., & Zeng, W.-B. (2023). Differential value of diffusion kurtosis imaging and intravoxel incoherent motion in benign and malignant solitary pulmonary lesions. Frontiers in Oncology, 12, Article 1075072. https://doi.org/10.3389/fonc.2022.1075072\nGihr, G. A., Horvath-Rizea, D., Hekeler, E., Ganslandt, O., Henkes, H., Hoffmann, K.-T., Scherlach, C., & Schob, S. (2020). Histogram analysis of diffusion weighted imaging in low-grade gliomas: in vivo characterization of tumor architecture and corresponding neuropathology. Frontiers in Oncology, 10, 206. https://doi.org/10.3389/fonc.2020.00206\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer. https://ggplot2.tidyverse.org\nGao, Y. (2021). ggExtra: Add marginal plots to ggplot2. https://cran.r-project.org/package=ggExtra\nAubry, R., & Bouchard, C. (2020). ggpmisc: Miscellaneous extensions to ‚Äòggplot2‚Äô. https://cran.r-project.org/package=ggpmisc\nKassambara, A. (2021). ggpubr: ‚Äòggplot2‚Äô based publication-ready plots. https://cran.r-project.org/package=ggpubr\nWickham, H., & RStudio Team. (2019). tidyverse: Easily install and load the ‚Äòtidyverse‚Äô. https://cran.r-project.org/package=tidyverse\nGarc√≠a, M. (2018). viridis: Default color maps from ‚Äòmatplotlib‚Äô. https://cran.r-project.org/package=viridis"
  },
  {
    "objectID": "Distribution-Gallery_sec/histogram.html#contributors",
    "href": "Distribution-Gallery_sec/histogram.html#contributors",
    "title": "Histogram",
    "section": "Contributors",
    "text": "Contributors\n\nEditor: YuJie Peng\nReviewers: ShiXiang Wang, Peng Luo, Hong Yang, KeXin Li, Ying Shi"
  },
  {
    "objectID": "Distribution/Histogram.html",
    "href": "Distribution/Histogram.html",
    "title": "Histogram",
    "section": "",
    "text": "A histogram uses rectangular bars to represent the frequency of data within specific intervals, where the total area of the bars corresponds to the total frequency. It is primarily used to visualize the distribution of continuous variables.",
    "crumbs": [
      "Distribution",
      "Histogram"
    ]
  },
  {
    "objectID": "Distribution/Histogram.html#example",
    "href": "Distribution/Histogram.html#example",
    "title": "Histogram",
    "section": "Example",
    "text": "Example\n\n\n\n\n\nThis basic histogram illustrates the expression levels of the TSPAN6 gene across different samples. The x-axis represents the data values, with each bar covering a specific range of values, while the y-axis shows how many data points fall within that range. In this histogram, the bars indicate the count of values within each specified range.\nThe histogram reveals that the data is centered around a value of 12, with values spanning roughly from 8 to 16. The shape of the histogram is approximately bell-shaped, suggesting that the data may follow a normal distribution.",
    "crumbs": [
      "Distribution",
      "Histogram"
    ]
  },
  {
    "objectID": "Distribution/Histogram.html#setup",
    "href": "Distribution/Histogram.html#setup",
    "title": "Histogram",
    "section": "Setup",
    "text": "Setup\n\nSystem Requirements: Cross-platform (Linux/MacOS/Windows)\nProgramming Language: R\nDependencies: readr, ggplot2, ggExtra, tidyverse, cowplot, viridis, ggpmisc, ggpubr\n\n\n# Installing necessary packages\nif (!requireNamespace(\"readr\", quietly = TRUE)) {\n  install.packages(\"readr\")\n}\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")\n}\nif (!requireNamespace(\"ggExtra\", quietly = TRUE)) {\n  install.packages(\"ggExtra\")\n}\nif (!requireNamespace(\"tidyverse\", quietly = TRUE)) {\n  install.packages(\"tidyverse\")\n}\nif (!requireNamespace(\"cowplot\", quietly = TRUE)) {\n  install.packages(\"cowplot\")\n}\nif (!requireNamespace(\"viridis\", quietly = TRUE)) {\n  install.packages(\"viridis\")\n}\nif (!requireNamespace(\"ggpmisc\", quietly = TRUE)) {\n  install.packages(\"ggpmisc\")\n}\nif (!requireNamespace(\"ggpubr\", quietly = TRUE)) {\n  install.packages(\"ggpubr\")\n}\n\n# Loading the libraries\nlibrary(readr)      # Read tsv files\nlibrary(ggplot2)    # Load ggplot2 for creating plots\nlibrary(ggExtra)    # Load ggExtra for enhancing ggplot2 graphics\nlibrary(tidyverse)  # Load tidyverse for data manipulation functions\nlibrary(cowplot)  # Load cowplot for combining separate ggplots into the same graphic\nlibrary(viridis)    # Load viridis for color maps\nlibrary(ggpmisc)    # Load ggpmisc for extentions to ggplot2 with additional functions for statistical annotation\nlibrary(ggpubr)     # Load ggpubr for extentions to ggplot2 with adding publication-ready themes, arranging multiple plots, and statistical tests",
    "crumbs": [
      "Distribution",
      "Histogram"
    ]
  },
  {
    "objectID": "Distribution/Histogram.html#data-preparation",
    "href": "Distribution/Histogram.html#data-preparation",
    "title": "Histogram",
    "section": "Data Preparation",
    "text": "Data Preparation\nHere‚Äôs a brief tutorial using the built-in R datasets (iris, mtcars) and the TCGA-LIHC.htseq_counts.tsv dataset from UCSC Xena DATASETS. This example demonstrates how to load and work with these datasets in R.\n\n# Read the TSV data\ndata &lt;- readr::read_tsv(\"https://bizard-1301043367.cos.ap-guangzhou.myqcloud.com/TCGA-LIHC.htseq_counts.tsv.gz\")\n\n# Filter and reshape data for the first gene TSPAN6 (Ensembl ID: ENSG00000000003.13)\ndata1 &lt;- data %&gt;%\n  filter(Ensembl_ID == \"ENSG00000000003.13\") %&gt;%\n  pivot_longer(\n    cols = -Ensembl_ID, \n    names_to = \"sample\", \n    values_to = \"expression\"\n  ) %&gt;%\n  mutate(var = \"var1\")  # Add a column to differentiate the variables\n\n# Filter and reshape data for the second gene SCYL3 (Ensembl ID: ENSG00000000457.12)\ndata2 &lt;- data %&gt;%\n  filter(Ensembl_ID == \"ENSG00000000457.12\") %&gt;%\n  pivot_longer(\n    cols = -Ensembl_ID, \n    names_to = \"sample\", \n    values_to = \"expression\"\n  ) %&gt;%\n  mutate(var = \"var2\")  # Add a column to differentiate the variables\n\n# Combine the two datasets\ndata12 &lt;- bind_rows(data1, data2)\n\n# View the final combined dataset\nhead(data12)\n\n# A tibble: 6 √ó 4\n  Ensembl_ID         sample           expression var  \n  &lt;chr&gt;              &lt;chr&gt;                 &lt;dbl&gt; &lt;chr&gt;\n1 ENSG00000000003.13 TCGA-DD-A4NG-01A      12.8  var1 \n2 ENSG00000000003.13 TCGA-G3-AAV4-01A       9.72 var1 \n3 ENSG00000000003.13 TCGA-2Y-A9H1-01A      11.3  var1 \n4 ENSG00000000003.13 TCGA-CC-A3M9-01A      11.6  var1 \n5 ENSG00000000003.13 TCGA-K7-AAU7-01A      11.5  var1 \n6 ENSG00000000003.13 TCGA-BC-A10W-01A      12.0  var1",
    "crumbs": [
      "Distribution",
      "Histogram"
    ]
  },
  {
    "objectID": "Distribution/Histogram.html#visualization",
    "href": "Distribution/Histogram.html#visualization",
    "title": "Histogram",
    "section": "Visualization",
    "text": "Visualization\n\n1. Basic Histograms\nFigure¬†1 illustrates the distribution of expression levels for the TSPAN6 gene across different samples.\n\n# Basic Histogram\np1 &lt;- ggplot(data1, aes(x = expression)) +\n  geom_histogram() + \n  labs(x = \"Gene Expression\", y = \"Count\")\n\np1\n\n\n\n\n\n\n\nFigure¬†1: Basic Histogram\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nKey Parameters: binwidth / bins\nThe binwidth or bins parameter determines how much data each bin will contain. Modifying these values can significantly affect the appearance of the histogram and the information conveyed.\n\n\n\np2_1 &lt;- ggplot(data1, aes(x = expression)) +\n  geom_histogram(bins = 30, fill = \"skyblue\", color = \"white\") +\n  ggtitle(\"Bins = 30\") + \n  labs(x = \"Gene Expression\", y = \"Count\")\n\np2_2 &lt;- ggplot(data1, aes(x = expression)) +\n  geom_histogram(bins = 50, fill = \"skyblue\", color = \"white\") +\n  ggtitle(\"Bins = 50\") + \n  labs(x = \"Gene Expression\", y = \"Count\")\n\ncowplot::plot_grid(p2_1, p2_2)\n\n\n\n\n\n\n\nFigure¬†2: Key Parameters: binwidth / bins\n\n\n\n\n\n\n\n2. Histogram with Density Curve\nThe density curve provides a smooth representation of the data distribution. Unlike the histogram, which depends on the number of bins, the density curve uses kernel density estimation (KDE) to smooth the distribution. This allows a clearer understanding of the overall trend and shape of the data.\n\np1 &lt;- ggplot(data1, aes(x = expression)) +\n  geom_histogram(aes(y = after_stat(density)), bins = 30, fill = \"skyblue\", color = \"white\") +\n  geom_density(alpha = 0.2, fill = \"#FF6666\") + \n  labs(x = \"Gene Expression\", y = \"Density\")\n\np1\n\n\n\n\n\n\n\nFigure¬†3: Histogram with Density Curve\n\n\n\n\n\n\n\n3. Mirrored Histogram\nA mirrored histogram provides an intuitive way to compare the distributions of two datasets. This visualization uses a mirrored structure, allowing you to quickly assess symmetry or differences between the datasets. By overlaying both histograms into a single plot, the mirrored histogram conserves visualization space while maintaining a clear representation of data distribution.\n\np &lt;- ggplot(data12, aes(x = expression, fill = var)) +\n  geom_histogram(data = subset(data12, var == \"var1\"), \n                 aes(y = after_stat(density)), \n                 binwidth = 0.5, \n                 alpha = 0.7, \n                 fill = \"#69b3a2\") +\n  geom_histogram(data = subset(data12, var == \"var2\"), \n                 aes(y = -after_stat(density)), \n                 binwidth = 0.5, \n                 alpha = 0.7, \n                 fill = \"#404080\") +\n  scale_fill_manual(values = c(\"var1\" = \"#69b3a2\", \"var2\" = \"#404080\")) +\n  labs(x = \"Gene Expression\", y = \"Density\")\n\np\n\n\n\n\n\n\n\nFigure¬†4: Mirrored Histogram\n\n\n\n\n\n\n\n4. Overlapping Histograms on the Same Axis\nOverlaying or placing multiple histograms side by side on the same axis enables a direct comparison of distributions for two or more datasets within the same coordinate system. By adjusting colors and transparency, you can clearly visualize overlapping regions and distinguish between datasets. This technique is ideal for comparing 2‚Äì3 groups; more groups may lead to visual clutter, making the plot difficult to interpret.\n\np &lt;- data12 %&gt;%\n  ggplot(aes(x = expression, fill = var)) +\n  geom_histogram(color = \"#e9ecef\", alpha = 0.6, position = 'identity') +\n  scale_fill_manual(values = c(\"#69b3a2\", \"#404080\")) +\n  labs(x = \"Expression Value\", y = \"Count\", fill = \"Type\") +\n  theme_minimal()\n\np\n\n\n\n\n\n\n\nFigure¬†5: Overlapping Histograms on the Same Axis\n\n\n\n\n\n\n\n5. Faceted Histograms for Multiple Variables\nFaceted histograms provide a structured way to compare and analyze data across multiple variables or categorical groups by displaying them in separate panels. Unlike traditional histograms, faceted layouts are particularly effective for avoiding overlap in visualizations, ensuring clarity in comparisons, and enabling multidimensional data exploration. This approach is ideal for grouped or classified data and enhances the interpretability of complex datasets.\n\n# Use built-in iris dataset\ndata &lt;- iris\n\n# Reshape the data from wide to long format\ndata &lt;- data %&gt;%\n  gather(key = \"variable\", value = \"value\", -Species)  # Exclude the Species column\n\n# Plot the faceted histograms\np &lt;- data %&gt;%\n  ggplot(aes(x = value, color = Species, fill = Species)) +\n  geom_histogram(alpha = 0.6, binwidth = 0.3, position = \"identity\") +\n  scale_fill_viridis(discrete = TRUE, option = \"D\") +\n  scale_color_viridis(discrete = TRUE, option = \"D\") +\n  theme(\n    legend.position = \"bottom\",\n    panel.spacing = unit(0.5, \"lines\"),\n    strip.text.x = element_text(size = 10)\n  ) +\n  xlab(\"Value\") +\n  ylab(\"Frequency\") +\n  facet_grid(Species ~ variable, scales = \"free_x\")  # Create a facet grid\n\np\n\n\n\n\n\n\n\nFigure¬†6: Faceted Histograms for Multiple Variables\n\n\n\n\n\n\n\n6. Adding Marginal Distributions Using ggMarginal()\n\n# Create a scatterplot with marginal histograms\np &lt;- ggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl), size = factor(cyl))) +\n  geom_point(aes(color = factor(cyl)), show.legend = TRUE) +  # Scatter points with color mapped to cylinder\n  geom_smooth(method = 'lm', formula = y ~ x, se = TRUE, linewidth = 1, aes(color = factor(cyl))) +  # Regression lines\n  scale_color_manual(values = c(\"#2e3b97\", \"#faad61\", \"#b76252\")) +  # Custom colors for regression lines\n  stat_regline_equation(\n    aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = \"~~~~\")),\n    formula = y ~ x, size = 3,\n    position = position_nudge(x = 2.7, y = 1)\n  ) +  # Add regression equations and R¬≤ values\n  theme(legend.position = \"none\")  # Hide legend for cleaner visualization\n\n# Add marginal histograms to the scatterplot\np1 &lt;- ggMarginal(p, type = \"histogram\")\n\n# Display the plot\np1\n\n\n\n\n\n\n\nFigure¬†7: Adding Marginal Distributions Using ggMarginal()\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nCustomizable Parameters for Plots with Marginal Distributions\n\nChange the size of the marginal plot using the size parameter.\nCustomize the appearance of the marginal plot with common parameters.\nDisplay only one marginal plot (either the x or y axis) using margins = 'x' or margins = 'y'.\n\n\n\n\n# Create a scatterplot with marginal histograms\np &lt;- ggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl), size = factor(cyl))) +\n  geom_point(aes(color = factor(cyl)), show.legend = TRUE) +  # Scatter points with color mapped to cylinder\n  geom_smooth(method = 'lm', formula = y ~ x, se = TRUE, linewidth = 1, aes(color = factor(cyl))) +  # Regression lines\n  scale_color_manual(values = c(\"#2e3b97\", \"#faad61\", \"#b76252\")) +  # Custom colors for regression lines\n  stat_regline_equation(\n    aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = \"~~~~\")),\n    formula = y ~ x, size = 1.5,\n    position = position_nudge(x = 2.2, y = 1)\n  ) +  # Add regression equations and R¬≤ values\n  theme(legend.position = \"none\")  # Hide legend for cleaner visualization\n\n# Change the size of the marginal plot\np1 &lt;- ggMarginal(p, type = \"histogram\", size = 10)\n\n# Customize the appearance of the marginal plot\np2 &lt;- ggMarginal(p, type = \"histogram\", fill = \"slateblue\", xparams = list(bins = 10))\n\n# Display only one marginal plot (x-axis marginal plot)\np3 &lt;- ggMarginal(p, type = \"histogram\", margins = 'x')\n\ncowplot::plot_grid(p1, p2, p3)\n\n\n\n\n\n\n\nFigure¬†8: Customizable Parameters for Plots with Marginal Distributions",
    "crumbs": [
      "Distribution",
      "Histogram"
    ]
  },
  {
    "objectID": "Distribution/Histogram.html#applications",
    "href": "Distribution/Histogram.html#applications",
    "title": "Histogram",
    "section": "Applications",
    "text": "Applications\n\n1. Applications of Basic Histogram\n\n\n\n\n\n\nFigure¬†9: Applications of Basic Histogram\n\n\n\nFigure 9 shows the differences between the relative frequencies of human X and human Y chromosome‚Äôs histograms for n = 6. [1]\n\n\n2. Applications of Faceted Histograms\n\n\n\n\n\n\n\n\n\n\n\n(a) Xiang, L. et al.(2023)\n\n\n\n\n\n\n\n\n\n\n\n(b) Gihr, G.A. et al.(2020)\n\n\n\n\n\n\n\nFigure¬†10: Applications of Faceted Histograms\n\n\n\nFig. 10a shows the imaging features and whole-lesion histogram analysis of typical SPLs. [2]\nFig. 10b demonstrates examples of cranial MRI from patients with WHO grade I (upper row) and WHO grade II astrocytoma (lower row) including the corresponding whole tumor ADC histogram, H&E staining and Ki-67 immunohistochemistry. [3]",
    "crumbs": [
      "Distribution",
      "Histogram"
    ]
  },
  {
    "objectID": "Distribution/Histogram.html#reference",
    "href": "Distribution/Histogram.html#reference",
    "title": "Histogram",
    "section": "Reference",
    "text": "Reference\n\nCosta, A. M., Machado, J. T., & Quelhas, M. D. (2011). Histogram-based DNA analysis for the visualization of chromosome, genome, and species information. Bioinformatics, 27(9), 1207‚Äì1214. https://doi.org/10.1093/bioinformatics/btr131\nXiang, L., Yang, H., Qin, Y., Wen, Y., Liu, X., & Zeng, W.-B. (2023). Differential value of diffusion kurtosis imaging and intravoxel incoherent motion in benign and malignant solitary pulmonary lesions. Frontiers in Oncology, 12, Article 1075072. https://doi.org/10.3389/fonc.2022.1075072\nGihr, G. A., Horvath-Rizea, D., Hekeler, E., Ganslandt, O., Henkes, H., Hoffmann, K.-T., Scherlach, C., & Schob, S. (2020). Histogram analysis of diffusion weighted imaging in low-grade gliomas: in vivo characterization of tumor architecture and corresponding neuropathology. Frontiers in Oncology, 10, 206. https://doi.org/10.3389/fonc.2020.00206\nWickham, H., Hester J, & Bryan J. (2024). readr: Read Rectangular Text Data. https://CRAN.R-project.org/package=readr\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer. https://ggplot2.tidyverse.org\nGao, Y. (2021). ggExtra: Add marginal plots to ggplot2. https://cran.r-project.org/package=ggExtra\nWickham, H., & RStudio Team. (2019). tidyverse: Easily install and load the ‚Äòtidyverse‚Äô. https://cran.r-project.org/package=tidyverse\nClaus O. Wilke. (2024). cowplot: Streamlined Plot Theme and Plot Annotations for ‚Äòggplot2‚Äô. https://CRAN.R-project.org/package=cowplot\nGarc√≠a, M. (2018). viridis: Default color maps from ‚Äòmatplotlib‚Äô. https://cran.r-project.org/package=viridis\nAubry, R., & Bouchard, C. (2020). ggpmisc: Miscellaneous extensions to ‚Äòggplot2‚Äô. https://cran.r-project.org/package=ggpmisc\nKassambara, A. (2021). ggpubr: ‚Äòggplot2‚Äô based publication-ready plots. https://cran.r-project.org/package=ggpubr",
    "crumbs": [
      "Distribution",
      "Histogram"
    ]
  },
  {
    "objectID": "Distribution/Histogram.html#contributors",
    "href": "Distribution/Histogram.html#contributors",
    "title": "Histogram",
    "section": "Contributors",
    "text": "Contributors\n\nEditor: YuJie Peng\nReviewers: ShiXiang Wang, Peng Luo, Hong Yang, KeXin Li, Ying Shi",
    "crumbs": [
      "Distribution",
      "Histogram"
    ]
  },
  {
    "objectID": "About.zh-cn.html",
    "href": "About.zh-cn.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "Graph-Gallery.html",
    "href": "Graph-Gallery.html",
    "title": "Graph Gallery",
    "section": "",
    "text": "üëã Bizard is a comprehensive repository of advanced visualization codes tailored for biomedical research.\nThe toolkit includes a diverse array of charting options, from variable distributions to interactive visualizations, systematically organized to meet the unique needs of biomedical data analysis. Built on a robust foundation, each example is paired with reproducible R code, detailed annotations, and real-world datasets to ensure accessibility and practical application.\nWith resources for both beginners and seasoned researchers, Bizard empowers users to create intuitive, scientifically rigorous, and visually compelling outputs, advancing data visualization standards in the biomedical field.",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "Graph-Gallery.html#under-construction-demo-only",
    "href": "Graph-Gallery.html#under-construction-demo-only",
    "title": "Graph Gallery",
    "section": "UNDER CONSTRUCTION [DEMO ONLY]",
    "text": "UNDER CONSTRUCTION [DEMO ONLY]",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "Graph-Gallery.html#distribution-gallery",
    "href": "Graph-Gallery.html#distribution-gallery",
    "title": "Graph Gallery",
    "section": "Distribution Gallery",
    "text": "Distribution Gallery\n\n\n\nDistribution DEMO",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "Graph-Gallery.html#correlation-gallery",
    "href": "Graph-Gallery.html#correlation-gallery",
    "title": "Graph Gallery",
    "section": "Correlation Gallery",
    "text": "Correlation Gallery\n\n\n\nCorrelation DEMO",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "Graph-Gallery.html#ranking-gallery",
    "href": "Graph-Gallery.html#ranking-gallery",
    "title": "Graph Gallery",
    "section": "Ranking Gallery",
    "text": "Ranking Gallery\n\n\n\nRanking DEMO",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "Graph-Gallery.html#others",
    "href": "Graph-Gallery.html#others",
    "title": "Graph Gallery",
    "section": "Others",
    "text": "Others",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bizard",
    "section": "",
    "text": "Data visualization is a critical tool in biomedical research, enabling intuitive interpretation of complex datasets to advance scientific discovery and inform clinical decisions. The R programming language, with its powerful statistical capabilities and extensive package ecosystem, has become a cornerstone for creating high-quality visualizations. However, the vast and ever-evolving landscape of R plotting packages often poses challenges for researchers, who must select appropriate methods and customize visualizations to meet specific research needs. This process demands advanced coding expertise, interdisciplinary collaboration, and significant time investment, which can hinder progress and impact the accuracy of experimental outcomes.\nTo address these challenges, we developed Bizard, a comprehensive, community-driven platform that integrates a curated repository of visualization codes, advanced tutorials, and collaborative forums. By streamlining access to resources and promoting knowledge exchange, Bizard aims to enhance biomedical researchers‚Äô data analysis capabilities and facilitate the clinical translation of research findings.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Bizard",
    "section": "",
    "text": "Data visualization is a critical tool in biomedical research, enabling intuitive interpretation of complex datasets to advance scientific discovery and inform clinical decisions. The R programming language, with its powerful statistical capabilities and extensive package ecosystem, has become a cornerstone for creating high-quality visualizations. However, the vast and ever-evolving landscape of R plotting packages often poses challenges for researchers, who must select appropriate methods and customize visualizations to meet specific research needs. This process demands advanced coding expertise, interdisciplinary collaboration, and significant time investment, which can hinder progress and impact the accuracy of experimental outcomes.\nTo address these challenges, we developed Bizard, a comprehensive, community-driven platform that integrates a curated repository of visualization codes, advanced tutorials, and collaborative forums. By streamlining access to resources and promoting knowledge exchange, Bizard aims to enhance biomedical researchers‚Äô data analysis capabilities and facilitate the clinical translation of research findings.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#what-is-bizard",
    "href": "index.html#what-is-bizard",
    "title": "Bizard",
    "section": "What is Bizard?",
    "text": "What is Bizard?\nBizard brings together powerful visualization tools, curated code, and collaborative features, enabling researchers to streamline data analysis and present their findings in a clear and impactful way.\n\nComprehensive Visualization Repository: Bizard consolidates visualization codes from diverse sources, including conventional graphgallery charts and innovative contributions from global experts, providing a state-of-the-art toolkit for biomedical research.\nVersatile Chart Options: The repository features R code implementations for a wide range of visualizations‚Äîvariable distributions, correlation analyses, ranking plots, and interactive charts‚Äîmeeting diverse data analysis needs.\nReal-World Applications: Leveraging both native R datasets and authentic biomedical data examples, Bizard enables intuitive understanding and application of visualization techniques in real-world research contexts, accelerating clinical translation.\nTailored for Biomedical Data: Includes preprocessing algorithms, annotated plotting codes, and specialized methodologies to accommodate the complexities of biomedical datasets, making advanced visualization accessible even to users with limited programming expertise.\nIntegrated Statistical Analysis: Combines statistical analysis functions with visualization modules, ensuring rigorous, visually compelling outputs that bolster research reliability and advance evidence-based medicine.\nCollaborative and Open Innovation: Actively invites contributions from biomedical experts to refine features and address evolving data visualization challenges through collective expertise.\nMulti-Platform Accessibility: Offers resources through an open-source GitHub repository with interactive forums and a WeChat official account for tutorials and updates, fostering knowledge sharing and collaboration.\nDriving Research Excellence: Empowers researchers to elevate their data visualization skills, improve methodological standards, and advance precision medicine and personalized therapies.\nFuture Vision: Committed to expanding international collaborations and delivering innovative, refined solutions to address the growing complexity of biomedical data visualization and analysis.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#about",
    "href": "index.html#about",
    "title": "Bizard",
    "section": "About",
    "text": "About\nPeng lab has a long-standing interest in cancer biomedical research and bioinformatics. We recently developed several other Shiny web tools focusing on solving various scientific questions.\n\n\n\n\n\n\nNote\n\n\n\nIf you find it useful or have suggestions for improvement, please let us know by clicking ‚ÄúEdit this page‚Äù or ‚ÄúReport an issue‚Äù at the upper right side of any page.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.zh-cn.html",
    "href": "index.zh-cn.html",
    "title": "Bizard",
    "section": "",
    "text": "Data visualization is a critical tool in biomedical research, enabling intuitive interpretation of complex datasets to advance scientific discovery and inform clinical decisions. The R programming language, with its powerful statistical capabilities and extensive package ecosystem, has become a cornerstone for creating high-quality visualizations. However, the vast and ever-evolving landscape of R plotting packages often poses challenges for researchers, who must select appropriate methods and customize visualizations to meet specific research needs. This process demands advanced coding expertise, interdisciplinary collaboration, and significant time investment, which can hinder progress and impact the accuracy of experimental outcomes.\nTo address these challenges, we developed Bizard, a comprehensive, community-driven platform that integrates a curated repository of visualization codes, advanced tutorials, and collaborative forums. By streamlining access to resources and promoting knowledge exchange, Bizard aims to enhance biomedical researchers‚Äô data analysis capabilities and facilitate the clinical translation of research findings."
  },
  {
    "objectID": "index.zh-cn.html#welcome",
    "href": "index.zh-cn.html#welcome",
    "title": "Bizard",
    "section": "",
    "text": "Data visualization is a critical tool in biomedical research, enabling intuitive interpretation of complex datasets to advance scientific discovery and inform clinical decisions. The R programming language, with its powerful statistical capabilities and extensive package ecosystem, has become a cornerstone for creating high-quality visualizations. However, the vast and ever-evolving landscape of R plotting packages often poses challenges for researchers, who must select appropriate methods and customize visualizations to meet specific research needs. This process demands advanced coding expertise, interdisciplinary collaboration, and significant time investment, which can hinder progress and impact the accuracy of experimental outcomes.\nTo address these challenges, we developed Bizard, a comprehensive, community-driven platform that integrates a curated repository of visualization codes, advanced tutorials, and collaborative forums. By streamlining access to resources and promoting knowledge exchange, Bizard aims to enhance biomedical researchers‚Äô data analysis capabilities and facilitate the clinical translation of research findings."
  },
  {
    "objectID": "index.zh-cn.html#what-is-bizard",
    "href": "index.zh-cn.html#what-is-bizard",
    "title": "Bizard",
    "section": "What is Bizard?",
    "text": "What is Bizard?\nBizard brings together powerful visualization tools, curated code, and collaborative features, enabling researchers to streamline data analysis and present their findings in a clear and impactful way.\n\nComprehensive Visualization Repository: Bizard consolidates visualization codes from diverse sources, including conventional graphgallery charts and innovative contributions from global experts, providing a state-of-the-art toolkit for biomedical research.\nVersatile Chart Options: The repository features R code implementations for a wide range of visualizations‚Äîvariable distributions, correlation analyses, ranking plots, and interactive charts‚Äîmeeting diverse data analysis needs.\nReal-World Applications: Leveraging both native R datasets and authentic biomedical data examples, Bizard enables intuitive understanding and application of visualization techniques in real-world research contexts, accelerating clinical translation.\nTailored for Biomedical Data: Includes preprocessing algorithms, annotated plotting codes, and specialized methodologies to accommodate the complexities of biomedical datasets, making advanced visualization accessible even to users with limited programming expertise.\nIntegrated Statistical Analysis: Combines statistical analysis functions with visualization modules, ensuring rigorous, visually compelling outputs that bolster research reliability and advance evidence-based medicine.\nCollaborative and Open Innovation: Actively invites contributions from biomedical experts to refine features and address evolving data visualization challenges through collective expertise.\nMulti-Platform Accessibility: Offers resources through an open-source GitHub repository with interactive forums and a WeChat official account for tutorials and updates, fostering knowledge sharing and collaboration.\nDriving Research Excellence: Empowers researchers to elevate their data visualization skills, improve methodological standards, and advance precision medicine and personalized therapies.\nFuture Vision: Committed to expanding international collaborations and delivering innovative, refined solutions to address the growing complexity of biomedical data visualization and analysis."
  },
  {
    "objectID": "index.zh-cn.html#about",
    "href": "index.zh-cn.html#about",
    "title": "Bizard",
    "section": "About",
    "text": "About\nPeng lab has a long-standing interest in cancer biomedical research and bioinformatics. We recently developed several other Shiny web tools focusing on solving various scientific questions.\n\n\n\n\n\n\nNote\n\n\n\nIf you find it useful or have suggestions for improvement, please let us know by clicking ‚ÄúEdit this page‚Äù or ‚ÄúReport an issue‚Äù at the upper right side of any page."
  }
]