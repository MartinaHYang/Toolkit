[
  {
    "objectID": "Distribution-Gallery_sec/histogram.html",
    "href": "Distribution-Gallery_sec/histogram.html",
    "title": "Histogram",
    "section": "",
    "text": "A histogram uses rectangular bars to represent the frequency of data within specific intervals, where the total area of the bars corresponds to the total frequency. It is primarily used to visualize the distribution of continuous variables.",
    "crumbs": [
      "Distribution",
      "Histogram"
    ]
  },
  {
    "objectID": "Distribution-Gallery_sec/histogram.html#example",
    "href": "Distribution-Gallery_sec/histogram.html#example",
    "title": "Histogram",
    "section": "Example",
    "text": "Example\n\n\n\n\n\nThis basic histogram illustrates the expression levels of the TSPAN6 gene across different samples. The x-axis represents the data values, with each bar covering a specific range of values, while the y-axis shows how many data points fall within that range. In this histogram, the bars indicate the count of values within each specified range.\nThe histogram reveals that the data is centered around a value of 12, with values spanning roughly from 8 to 16. The shape of the histogram is approximately bell-shaped, suggesting that the data may follow a normal distribution.",
    "crumbs": [
      "Distribution",
      "Histogram"
    ]
  },
  {
    "objectID": "Distribution-Gallery_sec/histogram.html#setup",
    "href": "Distribution-Gallery_sec/histogram.html#setup",
    "title": "Histogram",
    "section": "Setup",
    "text": "Setup\n\nSystem Requirements: Cross-platform (Linux/MacOS/Windows)\nProgramming Language: R\nDependencies: ggplot2, ggExtra\n\n# Installing necessary packages\nif (!requireNamespace(\"ggplot2\", quietly = TRUE)) {\n  install.packages(\"ggplot2\")  # Install ggplot2 for data visualization\n}\nif (!requireNamespace(\"ggExtra\", quietly = TRUE)) {\n  install.packages(\"ggExtra\")  # Install ggExtra for enhancing ggplot2 graphics\n}\nif (!requireNamespace(\"tidyverse\", quietly = TRUE)) {\n  install.packages(\"tidyverse\")  # Install tidyverse for data manipulation\n}\n\n# Loading the libraries\nlibrary(ggplot2)    # Load ggplot2 for creating plots\nlibrary(ggExtra)    # Load ggExtra for additional plot functionalities\nlibrary(tidyverse)  # Load tidyverse for data manipulation functions",
    "crumbs": [
      "Distribution",
      "Histogram"
    ]
  },
  {
    "objectID": "Distribution-Gallery_sec/histogram.html#data-preparation",
    "href": "Distribution-Gallery_sec/histogram.html#data-preparation",
    "title": "Histogram",
    "section": "Data Preparation",
    "text": "Data Preparation\nHere’s a brief tutorial using the built-in R datasets (iris, mtcars) and the TCGALIHC.htseq_counts.tsv dataset from UCSC Xena. This example demonstrates how to load and work with these datasets in R.\n# Read the TSV data\ndata &lt;- read.csv(\"TCGA-LIHC.htseq_counts.tsv\", header = TRUE, sep = \"\\t\")  # Correct separator for TSV\n\n# Filter and reshape data\ndata1 &lt;- data %&gt;%\n  filter(Ensembl_ID == \"ENSG00000000003.13\") %&gt;%\n  pivot_longer(\n    cols = -Ensembl_ID, \n    names_to = \"sample\", \n    values_to = \"expression\"\n  ) %&gt;%\n  mutate(var = \"var1\")  # Add a column to differentiate the variables\n\n# Filter and reshape data for the second gene (Ensembl ID: ENSG00000000457.12)\ndata2 &lt;- data %&gt;%\n  filter(Ensembl_ID == \"ENSG00000000457.12\") %&gt;%\n  pivot_longer(\n    cols = -Ensembl_ID, \n    names_to = \"sample\", \n    values_to = \"expression\"\n  ) %&gt;%\n  mutate(var = \"var2\")  # Add a column to differentiate the variables\n\n# Combine the two datasets\ndata12 &lt;- bind_rows(data1, data2)\n\n# View the final combined dataset\nhead(data12)",
    "crumbs": [
      "Distribution",
      "Histogram"
    ]
  },
  {
    "objectID": "Distribution-Gallery_sec/histogram.html#visualization",
    "href": "Distribution-Gallery_sec/histogram.html#visualization",
    "title": "Histogram",
    "section": "Visualization",
    "text": "Visualization\n\nBasic Histogram\n# Basic Histogram\np1 &lt;- ggplot(data1, aes(x = expression)) +\ngeom_histogram()\n\np1\n\n\n\nThis basic histogram illustrates the distribution of expression levels for the TSPAN6 gene across different samples.\n\n\n\n\nKey Parameters: binwidth / bins\nThe binwidth or bins parameter determines how much data each bin will contain. Modifying these values can significantly affect the appearance of the histogram and the information conveyed.\np2 &lt;- ggplot(data1, aes(x = expression)) +\n  geom_histogram(bins = 50, fill = \"skyblue\", color = \"white\") +\n  ggtitle(\"Bins = 50\")\n\np2\n\n\n\n\n\n\n\nHistogram with Density Curve\nThe density curve provides a smooth representation of the data distribution. Unlike the histogram, which depends on the number of bins, the density curve uses kernel density estimation (KDE) to smooth the distribution. This allows a clearer understanding of the overall trend and shape of the data.\np1 &lt;- ggplot(data1, aes(x = expression)) +\n  geom_histogram(aes(y = after_stat(density)), bins = 30, fill = \"skyblue\", color = \"white\") +\n  geom_density(alpha = 0.2, fill = \"#FF6666\")\n\np1",
    "crumbs": [
      "Distribution",
      "Histogram"
    ]
  },
  {
    "objectID": "Distribution-Gallery_sec/histogram.html#under-construction",
    "href": "Distribution-Gallery_sec/histogram.html#under-construction",
    "title": "Histogram",
    "section": "UNDER CONSTRUCTION",
    "text": "UNDER CONSTRUCTION",
    "crumbs": [
      "Distribution",
      "Histogram"
    ]
  },
  {
    "objectID": "Distribution-Gallery_sec/histogram.html#reference",
    "href": "Distribution-Gallery_sec/histogram.html#reference",
    "title": "Histogram",
    "section": "Reference",
    "text": "Reference\n\nCosta, A. M., Machado, J. T., & Quelhas, M. D. (2011). Histogram-based DNA analysis for the visualization of chromosome, genome, and species information. Bioinformatics, 27(9), 1207–1214. https://doi.org/10.1093/bioinformatics/btr131\nXiang, L., Yang, H., Qin, Y., Wen, Y., Liu, X., & Zeng, W.-B. (2023). Differential value of diffusion kurtosis imaging and intravoxel incoherent motion in benign and malignant solitary pulmonary lesions. Frontiers in Oncology, 12, Article 1075072. https://doi.org/10.3389/fonc.2022.1075072\nGihr, G. A., Horvath-Rizea, D., Hekeler, E., Ganslandt, O., Henkes, H., Hoffmann, K.-T., Scherlach, C., & Schob, S. (2020). Histogram analysis of diffusion weighted imaging in low-grade gliomas: in vivo characterization of tumor architecture and corresponding neuropathology. Frontiers in Oncology, 10, 206. https://doi.org/10.3389/fonc.2020.00206\nWickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer. https://ggplot2.tidyverse.org\nGao, Y. (2021). ggExtra: Add marginal plots to ggplot2. https://cran.r-project.org/package=ggExtra\nAubry, R., & Bouchard, C. (2020). ggpmisc: Miscellaneous extensions to ‘ggplot2’. https://cran.r-project.org/package=ggpmisc\nKassambara, A. (2021). ggpubr: ‘ggplot2’ based publication-ready plots. https://cran.r-project.org/package=ggpubr\nWickham, H., & RStudio Team. (2019). tidyverse: Easily install and load the ‘tidyverse’. https://cran.r-project.org/package=tidyverse\nGarcía, M. (2018). viridis: Default color maps from ‘matplotlib’. https://cran.r-project.org/package=viridis",
    "crumbs": [
      "Distribution",
      "Histogram"
    ]
  },
  {
    "objectID": "Distribution-Gallery_sec/histogram.html#contributors",
    "href": "Distribution-Gallery_sec/histogram.html#contributors",
    "title": "Histogram",
    "section": "Contributors",
    "text": "Contributors\n\nEditor: YuJie Peng\nReviewers: ShiXiang Wang, Peng Luo, Hong Yang, KeXin Li, Ying Shi",
    "crumbs": [
      "Distribution",
      "Histogram"
    ]
  },
  {
    "objectID": "Graph-Gallery.html",
    "href": "Graph-Gallery.html",
    "title": "Graph Gallery",
    "section": "",
    "text": "👋 CodeToolKit is a comprehensive repository of advanced visualization codes tailored for biomedical research.\nThe toolkit includes a diverse array of charting options, from variable distributions to interactive visualizations, systematically organized to meet the unique needs of biomedical data analysis. Built on a robust foundation, each example is paired with reproducible R code, detailed annotations, and real-world datasets to ensure accessibility and practical application.\nWith resources for both beginners and seasoned researchers, CodeToolKit empowers users to create intuitive, scientifically rigorous, and visually compelling outputs, advancing data visualization standards in the biomedical field.",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "Graph-Gallery.html#under-construction-demo-only",
    "href": "Graph-Gallery.html#under-construction-demo-only",
    "title": "Graph Gallery",
    "section": "UNDER CONSTRUCTION [DEMO ONLY]",
    "text": "UNDER CONSTRUCTION [DEMO ONLY]",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "Graph-Gallery.html#distribution-gallery",
    "href": "Graph-Gallery.html#distribution-gallery",
    "title": "Graph Gallery",
    "section": "Distribution Gallery",
    "text": "Distribution Gallery\n\n\n\nDistribution DEMO",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "Graph-Gallery.html#correlation-gallery",
    "href": "Graph-Gallery.html#correlation-gallery",
    "title": "Graph Gallery",
    "section": "Correlation Gallery",
    "text": "Correlation Gallery\n\n\n\nCorrelation DEMO",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "Graph-Gallery.html#ranking-gallery",
    "href": "Graph-Gallery.html#ranking-gallery",
    "title": "Graph Gallery",
    "section": "Ranking Gallery",
    "text": "Ranking Gallery\n\n\n\nRanking DEMO",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "Graph-Gallery.html#others",
    "href": "Graph-Gallery.html#others",
    "title": "Graph Gallery",
    "section": "Others",
    "text": "Others",
    "crumbs": [
      "Graph Gallery"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Code ToolKit",
    "section": "",
    "text": "Data visualization is a critical tool in biomedical research, enabling intuitive interpretation of complex datasets to advance scientific discovery and inform clinical decisions. The R programming language, with its powerful statistical capabilities and extensive package ecosystem, has become a cornerstone for creating high-quality visualizations. However, the vast and ever-evolving landscape of R plotting packages often poses challenges for researchers, who must select appropriate methods and customize visualizations to meet specific research needs. This process demands advanced coding expertise, interdisciplinary collaboration, and significant time investment, which can hinder progress and impact the accuracy of experimental outcomes.\nTo address these challenges, we developed Code ToolKit, a comprehensive, community-driven platform that integrates a curated repository of visualization codes, advanced tutorials, and collaborative forums. By streamlining access to resources and promoting knowledge exchange, CodeToolKit aims to enhance biomedical researchers’ data analysis capabilities and facilitate the clinical translation of research findings.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Code ToolKit",
    "section": "",
    "text": "Data visualization is a critical tool in biomedical research, enabling intuitive interpretation of complex datasets to advance scientific discovery and inform clinical decisions. The R programming language, with its powerful statistical capabilities and extensive package ecosystem, has become a cornerstone for creating high-quality visualizations. However, the vast and ever-evolving landscape of R plotting packages often poses challenges for researchers, who must select appropriate methods and customize visualizations to meet specific research needs. This process demands advanced coding expertise, interdisciplinary collaboration, and significant time investment, which can hinder progress and impact the accuracy of experimental outcomes.\nTo address these challenges, we developed Code ToolKit, a comprehensive, community-driven platform that integrates a curated repository of visualization codes, advanced tutorials, and collaborative forums. By streamlining access to resources and promoting knowledge exchange, CodeToolKit aims to enhance biomedical researchers’ data analysis capabilities and facilitate the clinical translation of research findings.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#what-is-code-toolkit",
    "href": "index.html#what-is-code-toolkit",
    "title": "Code ToolKit",
    "section": "What is Code ToolKit?",
    "text": "What is Code ToolKit?\nCodeToolKit brings together powerful visualization tools, curated code, and collaborative features, enabling researchers to streamline data analysis and present their findings in a clear and impactful way.\n\nComprehensive Visualization Repository: CodeToolKit consolidates visualization codes from diverse sources, including conventional graphgallery charts and innovative contributions from global experts, providing a state-of-the-art toolkit for biomedical research.\nVersatile Chart Options: The repository features R code implementations for a wide range of visualizations—variable distributions, correlation analyses, ranking plots, and interactive charts—meeting diverse data analysis needs.\nReal-World Applications: Leveraging both native R datasets and authentic biomedical data examples, CodeToolKit enables intuitive understanding and application of visualization techniques in real-world research contexts, accelerating clinical translation.\nTailored for Biomedical Data: Includes preprocessing algorithms, annotated plotting codes, and specialized methodologies to accommodate the complexities of biomedical datasets, making advanced visualization accessible even to users with limited programming expertise.\nIntegrated Statistical Analysis: Combines statistical analysis functions with visualization modules, ensuring rigorous, visually compelling outputs that bolster research reliability and advance evidence-based medicine.\nCollaborative and Open Innovation: Actively invites contributions from biomedical experts to refine features and address evolving data visualization challenges through collective expertise.\nMulti-Platform Accessibility: Offers resources through an open-source GitHub repository with interactive forums and a WeChat official account for tutorials and updates, fostering knowledge sharing and collaboration.\nDriving Research Excellence: Empowers researchers to elevate their data visualization skills, improve methodological standards, and advance precision medicine and personalized therapies.\nFuture Vision: Committed to expanding international collaborations and delivering innovative, refined solutions to address the growing complexity of biomedical data visualization and analysis.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#about",
    "href": "index.html#about",
    "title": "Code ToolKit",
    "section": "About",
    "text": "About\nPeng lab has a long-standing interest in cancer biomedical research and bioinformatics. We recently developed several other Shiny web tools focusing on solving various scientific questions.\n\n\n\n\n\n\nNote\n\n\n\nIf you find it useful or have suggestions for improvement, please let us know by clicking “Edit this page” or “Report an issue” at the upper right side of any page.",
    "crumbs": [
      "Welcome"
    ]
  }
]